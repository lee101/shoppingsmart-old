#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.530
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShoppingSmart.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShoppingSmartTest")]
	public partial class ShoppingSmartDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcat(cat instance);
    partial void Updatecat(cat instance);
    partial void Deletecat(cat instance);
    partial void Insertlargeimage(largeimage instance);
    partial void Updatelargeimage(largeimage instance);
    partial void Deletelargeimage(largeimage instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertsmallimage(smallimage instance);
    partial void Updatesmallimage(smallimage instance);
    partial void Deletesmallimage(smallimage instance);
    #endregion
		
		public ShoppingSmartDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShoppingSmartTestConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingSmartDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingSmartDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingSmartDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShoppingSmartDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cat> cats
		{
			get
			{
				return this.GetTable<cat>();
			}
		}
		
		public System.Data.Linq.Table<largeimage> largeimages
		{
			get
			{
				return this.GetTable<largeimage>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<smallimage> smallimages
		{
			get
			{
				return this.GetTable<smallimage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cat")]
	public partial class cat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prodid;
		
		private int _catid;
		
		private int _id;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprodidChanging(int value);
    partial void OnprodidChanged();
    partial void OncatidChanging(int value);
    partial void OncatidChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public cat()
		{
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prodid", DbType="Int NOT NULL")]
		public int prodid
		{
			get
			{
				return this._prodid;
			}
			set
			{
				if ((this._prodid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprodidChanging(value);
					this.SendPropertyChanging();
					this._prodid = value;
					this.SendPropertyChanged("prodid");
					this.OnprodidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catid", DbType="Int NOT NULL")]
		public int catid
		{
			get
			{
				return this._catid;
			}
			set
			{
				if ((this._catid != value))
				{
					this.OncatidChanging(value);
					this.SendPropertyChanging();
					this._catid = value;
					this.SendPropertyChanged("catid");
					this.OncatidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_cat", Storage="_product", ThisKey="prodid", OtherKey="id", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.cats.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.cats.Add(this);
						this._prodid = value.id;
					}
					else
					{
						this._prodid = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.largeimages")]
	public partial class largeimage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Data.Linq.Binary _image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public largeimage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(2000)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private System.Nullable<int> _price;
		
		private string _description;
		
		private string _url;
		
		private string _largeimg;
		
		private string _smallimg;
		
		private System.Nullable<int> _largeimgwidth;
		
		private System.Nullable<int> _largeimgheight;
		
		private System.Nullable<int> _smallimgwidth;
		
		private System.Nullable<int> _smallimgheight;
		
		private System.Nullable<int> _company;
		
		private System.Nullable<int> _colour;
		
		private EntitySet<cat> _cats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnlargeimgChanging(string value);
    partial void OnlargeimgChanged();
    partial void OnsmallimgChanging(string value);
    partial void OnsmallimgChanged();
    partial void OnlargeimgwidthChanging(System.Nullable<int> value);
    partial void OnlargeimgwidthChanged();
    partial void OnlargeimgheightChanging(System.Nullable<int> value);
    partial void OnlargeimgheightChanged();
    partial void OnsmallimgwidthChanging(System.Nullable<int> value);
    partial void OnsmallimgwidthChanged();
    partial void OnsmallimgheightChanging(System.Nullable<int> value);
    partial void OnsmallimgheightChanged();
    partial void OncompanyChanging(System.Nullable<int> value);
    partial void OncompanyChanged();
    partial void OncolourChanging(System.Nullable<int> value);
    partial void OncolourChanged();
    #endregion
		
		public product()
		{
			this._cats = new EntitySet<cat>(new Action<cat>(this.attach_cats), new Action<cat>(this.detach_cats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(1000)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(2000)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_largeimg", DbType="VarChar(1000)")]
		public string largeimg
		{
			get
			{
				return this._largeimg;
			}
			set
			{
				if ((this._largeimg != value))
				{
					this.OnlargeimgChanging(value);
					this.SendPropertyChanging();
					this._largeimg = value;
					this.SendPropertyChanged("largeimg");
					this.OnlargeimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smallimg", DbType="VarChar(1000)")]
		public string smallimg
		{
			get
			{
				return this._smallimg;
			}
			set
			{
				if ((this._smallimg != value))
				{
					this.OnsmallimgChanging(value);
					this.SendPropertyChanging();
					this._smallimg = value;
					this.SendPropertyChanged("smallimg");
					this.OnsmallimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_largeimgwidth", DbType="Int")]
		public System.Nullable<int> largeimgwidth
		{
			get
			{
				return this._largeimgwidth;
			}
			set
			{
				if ((this._largeimgwidth != value))
				{
					this.OnlargeimgwidthChanging(value);
					this.SendPropertyChanging();
					this._largeimgwidth = value;
					this.SendPropertyChanged("largeimgwidth");
					this.OnlargeimgwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_largeimgheight", DbType="Int")]
		public System.Nullable<int> largeimgheight
		{
			get
			{
				return this._largeimgheight;
			}
			set
			{
				if ((this._largeimgheight != value))
				{
					this.OnlargeimgheightChanging(value);
					this.SendPropertyChanging();
					this._largeimgheight = value;
					this.SendPropertyChanged("largeimgheight");
					this.OnlargeimgheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smallimgwidth", DbType="Int")]
		public System.Nullable<int> smallimgwidth
		{
			get
			{
				return this._smallimgwidth;
			}
			set
			{
				if ((this._smallimgwidth != value))
				{
					this.OnsmallimgwidthChanging(value);
					this.SendPropertyChanging();
					this._smallimgwidth = value;
					this.SendPropertyChanged("smallimgwidth");
					this.OnsmallimgwidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_smallimgheight", DbType="Int")]
		public System.Nullable<int> smallimgheight
		{
			get
			{
				return this._smallimgheight;
			}
			set
			{
				if ((this._smallimgheight != value))
				{
					this.OnsmallimgheightChanging(value);
					this.SendPropertyChanging();
					this._smallimgheight = value;
					this.SendPropertyChanged("smallimgheight");
					this.OnsmallimgheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="Int")]
		public System.Nullable<int> company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_colour", DbType="Int")]
		public System.Nullable<int> colour
		{
			get
			{
				return this._colour;
			}
			set
			{
				if ((this._colour != value))
				{
					this.OncolourChanging(value);
					this.SendPropertyChanging();
					this._colour = value;
					this.SendPropertyChanged("colour");
					this.OncolourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_cat", Storage="_cats", ThisKey="id", OtherKey="prodid")]
		public EntitySet<cat> cats
		{
			get
			{
				return this._cats;
			}
			set
			{
				this._cats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cats(cat entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_cats(cat entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.smallimages")]
	public partial class smallimage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Data.Linq.Binary _image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public smallimage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(2000)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
